{"version":3,"sources":["shared/images/gustavo.jpg","logo.svg","Components/AboutComponent.js","Components/FormacaoComponent.js","Components/ContatoComponent.js","Components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","props","Fragment","Row","Col","md","className","Card","CardBody","style","paddingBottom","CardTitle","Formacao","href","Contato","state","modal","name","email","msg","toggleModal","bind","handleChange","handleSubmit","this","setState","prevState","event","target","value","type","checked","preventDefault","alert","JSON","stringify","Button","onClick","color","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","id","onChange","rows","Component","Main","Container","src","avatar","width","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ddc33257.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gustavo.7301041c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nimport { Row, Col, Card, CardBody, CardTitle } from 'reactstrap';\r\n\r\nfunction About(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col md=\"12\" className=\"mt-md-5 mt-3\">\r\n                    <Card>\r\n                        <CardBody style={{paddingBottom: 30}}>\r\n                            <CardTitle><b>Sobre:</b></CardTitle>\r\n                            <Row>\r\n                                <Col md=\"12\">\r\n                                    Atuo na informática desde os 11 anos. Por intermédio de uma grande pessoa, me aprofundei mais no mundo tecnológico: comecei com servidores Linux (minha paixão), redes de maneira geral...\r\n                                    progredi para reparos eletrônicos e a medida que fui estudando me aprofundei em programação. Comecei com C, C++ e cai no mundo dos sistemas Web. Amo UX, luto pela UI\r\n                                    perfeita mas é em desenvolvimento que foco. Javascript é minha paixão, me rendo ao PHP em alguns momentos mas o importante é oferer boas soluções. Gosto de simplicidade,\r\n                                    no código e na vida.\r\n                                    <br />\r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { Col, Row, Card, CardBody, CardTitle } from 'reactstrap';\r\n\r\nfunction Formacao(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md=\"6\" className=\"mt-md-5 mt-5\">\r\n                    <Card>\r\n                        <CardBody>\r\n                            <CardTitle><b>Formação:</b></CardTitle>\r\n                            <Row>\r\n                                <Col md=\"6\" className=\"text-center\">\r\n                                    <a href=\"http://cederj.edu.br/cederj/\"><b>CEDERJ</b></a> - Tecnólogo em Sistemas de Computação (cursando)\r\n                                </Col>\r\n                                <Col md=\"6\" className=\"text-center\">\r\n                                    <a href=\"https://www.coursera.org/\"><b>Coursera</b></a> - Universidade de Ciência e Tecnologia de Hong Kong\r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Formacao;","import React, { Component } from 'react';\r\nimport { Row, Col, Button, Modal, ModalBody, ModalHeader, Form, Input, Label, FormGroup } from 'reactstrap';\r\n\r\nclass Contato extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: false,\r\n            name: '',\r\n            email: '',\r\n            msg: ''\r\n        }\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }));\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        alert(JSON.stringify(this.state));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Row className=\"justify-content-center mt-md-5 mt-3\">\r\n                    <Col md=\"6\" className=\"text-center\">\r\n                        <h4>Tem uma oportunidade é quer que eu faça parte? Clica no botão ai embaixo</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col md=\"6\" className=\"text-center mt-3\">\r\n                        <Button type=\"button\" onClick={this.toggleModal} color=\"success\">Fale comigo</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                    <ModalHeader toggle={this.toggleModal}>Contato</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Row>\r\n                                <Col md=\"12\">\r\n                                    <FormGroup>\r\n                                        <Label htmlFor=\"name\">Seu nome</Label>\r\n                                        <Input type=\"text\" name=\"name\" id=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md=\"12\">\r\n                                    <FormGroup>\r\n                                        <Label htmlFor=\"email\">Email</Label>\r\n                                        <Input type=\"text\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md=\"12\">\r\n                                    <FormGroup>\r\n                                        <Label htmlFor=\"msg\">Mensagem</Label>\r\n                                        <Input type=\"textarea\" value={this.state.msg} onChange={this.handleChange} name=\"msg\" id=\"msg\" rows=\"5\" />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <Button color=\"primary\" type=\"submit\" className=\"mr-2\">Enviar</Button>\r\n                            <Button color=\"danger\" type=\"button\" onClick={this.toggleModal}>Cancelar</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contato;","import React, { Component } from 'react';\r\nimport{ Row, Col, Container } from 'reactstrap';\r\nimport avatar from './../shared/images/gustavo.jpg';\r\nimport About from './AboutComponent';\r\nimport Formacao from './FormacaoComponent';\r\nimport Contato from './ContatoComponent';\r\n\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col md=\"12\" className=\"text-center mt-3\">\r\n                            <h3>\r\n                               Gustavo Kreischer de Almeida \r\n                            </h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md=\"12\" className=\"text-center mt-3\">\r\n                            <img src={avatar} style={{width: 250}} className=\"img-fluid img-thumbnail rounded\" alt=\"Foto Gustavo Kreischer de Almeida\"/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md=\"12\" className=\"text-center\">\r\n                            <p className=\"text-lead mt-1\">\r\n                                Desenvolvedor Fullstack Web Developper | Técnico em Informática<br/><a href=\"https://www.linkedin.com/in/gkprogrammer\">LinkedIn</a><br/><a href=\"https://github.com/Gkreischer\">GitHub</a>\r\n                            </p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md=\"4\" className=\"mt-md-5 mt-3 text-center\">\r\n                            <h4>Linguagem principal: </h4> <span>Javascript</span>\r\n                        </Col>\r\n                        <Col md=\"4\" className=\"mt-md-5 mt-3 text-center\">\r\n                            <h4>Frameworks: </h4> <span>ReactJS, Angular, Ionic, Nativescript, Laravel (APIRestful), Loopback, Bootstrap</span>\r\n                        </Col>\r\n                        <Col md=\"4\" className=\"mt-md-5 mt-3 text-center\">\r\n                            <h4>Backend: </h4> <span>MySQL, MongoDB</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md=\"12\" className=\"text-center mt-md-5 mt-3\">\r\n                            <h4>Servidores:</h4> <span>Web, Firewall, SQL, Proxy, Roteamento</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Formacao />\r\n                    <About/>\r\n                    <Contato />\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Main from './Components/MainComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}